apply plugin: 'android'

dependencies {
    compile 'com.android.support:support-v4:19.1.+'
    compile 'com.nineoldandroids:library:2.4.0'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"
    
    def Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(file('version.properties')))

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 19
        
        versionCode versionProps['versionCode'].toInteger()
        versionName versionProps['versionName']
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
          abortOnError false
    }

    signingConfigs {
        release 
    }

    buildTypes {
        release {
            debuggable false
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-project.txt')
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-project.txt')
            versionNameSuffix " Debug"
            packageNameSuffix ".debug"
        }
    }
}

def Properties localProps = new Properties()
localProps.load(new FileInputStream(file('../local.properties')))

if (localProps.containsKey('keystore.props.file')) {
    def Properties keyProps = new Properties()
    assert localProps['keystore.props.file'];

    keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
    android.signingConfigs.release.storeFile file(keyProps["storeFile"])
    android.signingConfigs.release.storePassword keyProps["storePassword"]
    android.signingConfigs.release.keyAlias keyProps["keyAlias"]
    android.signingConfigs.release.keyPassword keyProps["keyPassword"]
} else {
    println 'keystore.properties not found'
    android.buildTypes.release.signingConfig = null
}
        
